---
format: gfm
---

```{r}
#| label: knitr settings
#| include: false
#| warning: false
#| message: false

library(pretestcad)

```

<a name="top"></a>

# pretestcad <a href="jauntyjjs.github.io/pretestcad/"><img src="man/figures/logo.png" align="right" width="25%" height="25%" alt="Hex logo of R package pretestcad. Logo is a picture of a coronary artery with partial blockage." /></a>

<!-- badges: start -->
[![R-CMD-check](https://github.com/JauntyJJS/pretestcad/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/JauntyJJS/pretestcad/actions/workflows/R-CMD-check.yaml)
[![Codecov test coverage](https://codecov.io/gh/JauntyJJS/pretestcad/graph/badge.svg?token=lpJSgliKK3)](https://codecov.io/gh/JauntyJJS/pretestcad?branch=main)
<!-- badges: end -->

R package used to calculate different **P**re**T**est **P**robability (PTP) scores for obstructive **C**oronary **A**rtery **D**isease (CAD).

## Table of Content

- [:arrow_down: Installation]
- [:anatomical_heart: Currently available pretest probability scores]
- [:computer: Getting Started]

## :arrow_down: Installation

Install the development version from GitHub with:

```{r}
#| label: installation
#| eval: false

# install.packages("pak")
pak::pak("JauntyJJS/pretestcad")
```

<a href="#top">Back to top</a>

## :anatomical_heart: Currently available pretest probability scores

*  2024 ESC Guidelines PTP Score 
   *  [ðŸ“˜ Journal](https://doi.org/10.1093/eurheartj/ehae177){target="_blank"}
*  2022 Local Assessment of the Heart (LAH) clinical and extended model 
   *  [ðŸ“˜ Journal](https://doi.org/10.1161/JAHA.121.022697){target="_blank"}
*  2021 AHA/ACC Guidelines PTP Score
   *  [ðŸ“˜ Journal](https://doi.org/10.1161/CIR.0000000000001029){target="_blank"}
*  2020 Winther et. al. Basic, RF-CL and CACS-CL PTP 
   *  [ðŸ“˜ Journal](https://doi.org/10.1016/j.jacc.2020.09.585){target="_blank"}
*  2019 ESC Guidelines PTP Score 
   *  [ðŸ“˜ Journal](https://doi.org/10.1007/s00059-020-04935-x){target="_blank"}
*  2017 PROMISE Minimal-Risk Score 
   *  [ðŸ“˜ Journal](https://doi.org/10.1001/jamacardio.2016.5501){target="_blank"}
*  2015 CONFIRM Risk Score 
   *  [ðŸ“˜ Journal](https://doi.org/10.1016/j.amjmed.2014.10.031){target="_blank"}
*  2012 CAD Consortium 2 (CAD2) Basic, Clinical and Clinical with Coronary Calcium Score (CCS) PTP 
   *  [ðŸ“˜ Journal](https://doi.org/10.1136/bmj.e3485 ){target="_blank"}
   
<a href="#top">Back to top</a>

## :computer: Getting Started

### 2024 ESC Guidelines PTP Score

Here is how you can calculate the score using a single patient.

```{r}
#| label: usage

# 30 female with symptom score of 0 and 0 risk factors

calculate_esc_2024_fig_4_ptp(
 age = 30,
 sex = "female",
 chest_pain_type = "no chest pain",
 have_dyspnea = "no",
 have_family_history = "no",
 have_smoking_history = "no",
 have_dyslipidemia = "no",
 have_hypertension = "no",
 have_diabetes = "no",
 output = "numeric"
)

calculate_esc_2024_fig_4_ptp(
 age = 30,
 sex = "female",
 chest_pain_type = "no chest pain",
 have_dyspnea = "no",
 have_family_history = "no",
 have_smoking_history = "no",
 have_dyslipidemia = "no",
 have_hypertension = "no",
 have_diabetes = "no",
 output = "grouping"
)

```

Here is how you can calculate the score using for multiple patients.

```{r}
#| label: patient

patient_data <- tibble::tribble(
    ~unique_id,
    ~age,     ~sex, 
    ~chest_pain_type, ~have_dyspnea, 
    ~have_family_history, ~have_smoking_history, ~have_dyslipidemia, ~have_hypertension, ~have_diabetes,
    "45 year old male with typical chest pain, no dyspnea, hypertension and diabetes",
    45, "male", 
    "typical", "no",  
    "no", "no", "no", "yes", "yes",
    "70 year old female with no chest pain, dyspnea, have smoking history (past or current smoker) and dyslipidemia",
    70, "female", 
    "no chest pain", "yes",  
    "no", "yes", "yes", "no", "no"
)

risk_data <- patient_data |>
    dplyr::mutate(
      esc_2024_ptp_group = purrr::pmap_chr(
        .l = list(
          age = .data[["age"]],
          sex = .data[["sex"]],
          chest_pain_type = .data[["chest_pain_type"]],
          have_dyspnea = .data[["have_dyspnea"]],
          have_family_history = .data[["have_family_history"]],
          have_smoking_history = .data[["have_smoking_history"]], 
          have_dyslipidemia = .data[["have_dyslipidemia"]], 
          have_hypertension = .data[["have_hypertension"]], 
          have_diabetes = .data[["have_diabetes"]],
          output = "grouping"
        ),
        .f = pretestcad::calculate_esc_2024_fig_4_ptp,
      ),
      esc_2024_ptp_numeric = purrr::pmap_int(
        .l = list(
          age = .data[["age"]],
          sex = .data[["sex"]],
          chest_pain_type = .data[["chest_pain_type"]],
          have_dyspnea = .data[["have_dyspnea"]],
          have_family_history = .data[["have_family_history"]],
          have_smoking_history = .data[["have_smoking_history"]],
          have_dyslipidemia = .data[["have_dyslipidemia"]],
          have_hypertension = .data[["have_hypertension"]],
          have_diabetes = .data[["have_diabetes"]],
          output = "numeric"
        ),
        .f = pretestcad::calculate_esc_2024_fig_4_ptp
      ),
      esc_2024_ptp_percent = purrr::pmap_chr(
        .l = list(
          age = .data[["age"]],
          sex = .data[["sex"]],
          chest_pain_type = .data[["chest_pain_type"]],
          have_dyspnea = .data[["have_dyspnea"]],
          have_family_history = .data[["have_family_history"]],
          have_smoking_history = .data[["have_smoking_history"]],
          have_dyslipidemia = .data[["have_dyslipidemia"]],
          have_hypertension = .data[["have_hypertension"]],
          have_diabetes = .data[["have_diabetes"]],
          output = "percentage"
        ),
        .f = pretestcad::calculate_esc_2024_fig_4_ptp
      )
    ) |> 
   dplyr::select(
      c("unique_id", "esc_2024_ptp_group", 
        "esc_2024_ptp_numeric", "esc_2024_ptp_percent")
   )

print(risk_data)

```

<a href="#top">Back to top</a>
